


ARM Macro Assembler    Page 1 


    1 00000000         ; Defines aus lm4f120h5qr.h:
    2 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC  ; Toggle grüne Led 
                                                            in diesem Register
    3 00000000 4000451C 
                       GPIO_PORTA_DEN_R
                               EQU              0x4000451C  ; Digital-Enable-Re
                                                            gister
    4 00000000 40004400 
                       GPIO_PORTA_DIR_R
                               EQU              0x40004400  ; DIRECTION-Registe
                                                            r -> gewünschten Po
                                                            rt PA7 (0x80) auf 1
                                                             (Ausgang) setzen.
    5 00000000         
    6 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC  ; Use this register
                                                             to use button
    7 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400  ; DIRECTION-Registe
                                                            r
    8 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C  ; Digital-Enable-Re
                                                            gister
    9 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510  ; 
   10 00000000         
   11 00000000 400FE108 
                       SYSCTL_RCGC2_R
                               EQU              0x400FE108  ; Clock auf GPIO-PO
                                                            RTA aktivieren. Clo
                                                            ck ist default aus 
                                                            zwecks Strom sparen
                                                            
   12 00000000 00000001 
                       SYSCTL_RCGC2_GPIOA
                               EQU              0x00000001  ; Clock Port A
   13 00000000 00000020 
                       SYSCTL_RCGC2_GPIOF
                               EQU              0x0000020   ; Clock Port F 
   14 00000000         
   15 00000000         ; eigene Defines
   16 00000000 000FFFFF 
                       COUNTER EQU              0xFFFFF     ; Blinky-Delay
   17 00000000 00000080 
                       PA7     EQU              0x80        ; Bitmuster für Por
                                                            t PA7 (grüne LED au
                                                            f Boosterpack)
   18 00000000 00000040 
                       PA6     EQU              0x40        ; Bitmuster für Por
                                                            t PA6 (rote LED auf
                                                             Boosterpack)
   19 00000000 00000008 
                       PA3     EQU              0x8         ; Bitmuster für Por



ARM Macro Assembler    Page 2 


                                                            t PA3 (blaue LED au
                                                            f Boosterpack)
   20 00000000 000000C8 
                       PA0     EQU              0xC8        ; Bitmuster für Por
                                                            t PA0 (weiße LED au
                                                            f Boosterpack)
   21 00000000 000000C0 
                       PA2     EQU              0xC0        ; Bitmuster für Por
                                                            t PA2 (gelbe LED au
                                                            f Boosterpack)
   22 00000000 00000048 
                       PA4     EQU              0x48        ; Bitmuster für Por
                                                            t PA4 (magenta LED 
                                                            auf Boosterpack)
   23 00000000 00000088 
                       PA5     EQU              0x88        ; Bitmuster für Por
                                                            t PA5 (cyan LED auf
                                                             Boosterpack)
   24 00000000         
   25 00000000 00000000 
                       PF      EQU              0x00        ; LOW
   26 00000000 00000010 
                       P       EQU              0x10        ; HIGH
   27 00000000         
   28 00000000 0000000A 
                       matrikel_1
                               EQU              10
   29 00000000 0000000F 
                       matrikel_2
                               EQU              15
   30 00000000 00000000 
                       null    EQU              0
   31 00000000         
   32 00000000         ; Assembler-Direktive -> .text-Bereich
   33 00000000                 THUMB
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000                 EXPORT           Blinky
   36 00000000                 ENTRY
   37 00000000         
   38 00000000         ; Funktionen
   39 00000000         Blinky
   40 00000000         ; PORT A
   41 00000000         ; Als erstes Clock auf Port A aktivieren
   42 00000000 4941            LDR              R1, =SYSCTL_RCGC2_R ;get conten
                                                            t of system clock  
                                                                    
   43 00000002 6808            LDR              R0, [R1]    ;get content of r1 
                                                            to r0              
                                                                
   44 00000004 F040 0001       ORR              R0, R0, #SYSCTL_RCGC2_GPIOA
   45 00000008 6008            STR              R0, [R1]
   46 0000000A         
   47 0000000A         ; Setze Port PA7 (0x80) als Ausgang
   48 0000000A 4940            LDR              R1, =GPIO_PORTA_DIR_R ;get port
                                                            A to r1    
   49 0000000C 6808            LDR              R0, [R1]    ;get content to r0 
                                                               
   50 0000000E F040 0080       ORR              R0, R0, #PA7 ;get adress PA7 (0



ARM Macro Assembler    Page 3 


                                                            x80)    
   51 00000012 6008            STR              R0, [R1]
   52 00000014         
   53 00000014         ; Setze Port PA7 als Digital-Port
   54 00000014 493E            LDR              R1, =GPIO_PORTA_DEN_R ; point v
                                                            alue from portA dig
                                                            ital enable( PC-rel
                                                            ative addressing ) 
                                                             
   55 00000016 6808            LDR              R0, [R1]    ; R0 = value from p
                                                            ointer at R1       
                                                                 
   56 00000018 F040 0080       ORR              R0, R0, #PA7 ; set 1 bit high t
                                                            o enable digital po
                                                            rt
   57 0000001C 6008            STR              R0, [R1]    ; store register wo
                                                            rd, store value fro
                                                            m R1 to R0
   58 0000001E         
   59 0000001E         ;PORT F
   60 0000001E 493A            LDR              R1, =SYSCTL_RCGC2_R
   61 00000020 6808            LDR              R0, [R1]
   62 00000022 F040 0020       ORR              R0, R0, #SYSCTL_RCGC2_GPIOF
   63 00000026 6008            STR              R0, [R1]
   64 00000028         
   65 00000028 493A            LDR              R1, =GPIO_PORTF_DEN_R
   66 0000002A 6808            LDR              R0, [R1]
   67 0000002C F040 0010       ORR              R0, R0, #P  ; enable port F
   68 00000030 6008            STR              R0, [R1]
   69 00000032         
   70 00000032 4939            LDR              R1, =GPIO_PORTF_PUR_R
   71 00000034 6808            LDR              R0, [R1]
   72 00000036 F040 0010       ORR              R0, R0, #P  ; set port F HIGH t
                                                            o captrue LOW
   73 0000003A 6008            STR              R0, [R1]
   74 0000003C         
   75 0000003C 4937            LDR              R1, =GPIO_PORTF_DIR_R
   76 0000003E 6808            LDR              R0, [R1]
   77 00000040 F040 0000       ORR              R0, R0, #0
   78 00000044 6008            STR              R0, [R1]
   79 00000046         
   80 00000046 F64F 78FF 
              F2C0 080F        MOV32            R8, #COUNTER
   81 0000004E F04F 0400       MOV              R4, #0
   82 00000052         
   83 00000052         Matrikelnummer
   84 00000052 F04F 050A       LDR              R5, =matrikel_1 ; save the valu
                                                            e of matrikelnummer
                                                             1 in R5
   85 00000056 F04F 070F       LDR              R7, =matrikel_2 ; save the valu
                                                            e of matrikelnummer
                                                             2 in R7
   86 0000005A F04F 0400       LDR              R4, =null
   87 0000005E F04F 0600       LDR              R6, =null
   88 00000062         CountUp1
   89 00000062 F104 0401       ADD              R4, #1      ; count the value f
                                                            rom r4 up
   90 00000066 42AC            CMP              R4, R5      ; compare r4 with t
                                                            he value of matrike



ARM Macro Assembler    Page 4 


                                                            lnummer 1
   91 00000068 D000            BEQ              CountDown1  ; if r4 = matrikeln
                                                            ummer 1, then do Co
                                                            untDown
   92 0000006A E7FA            B                CountUp1    ; if not count the 
                                                            value down again
   93 0000006C         CountDown1
   94 0000006C F1A4 0401       SUB              R4, #1      ; count the value f
                                                            rom r4 down
   95 00000070 2C00            CMP              R4, #null   ; compare r4 with v
                                                            alue 0
   96 00000072 D000            BEQ              CountUp2    ; if r4 = 0, then d
                                                            o CountUp2
   97 00000074 E7FA            B                CountDown1  ; if not count the 
                                                            value down again
   98 00000076         CountUp2
   99 00000076 F106 0601       ADD              R6, #1      ; count the value f
                                                            rom r6 up
  100 0000007A 42BE            CMP              R6, R7      ; compare r6 with t
                                                            he value of matrike
                                                            lnummer 2
  101 0000007C D000            BEQ              CountDown2  ; if r6 = matrikeln
                                                            ummer 2, then do Co
                                                            untDown
  102 0000007E E7FA            B                CountUp2    ; if not count the 
                                                            value down again
  103 00000080         CountDown2
  104 00000080 F1A6 0601       SUB              R6, #1      ; count the value f
                                                            rom r4 down
  105 00000084 2E00            CMP              R6, #null   ; compare r6 with v
                                                            alue 0
  106 00000086 D000            BEQ              Button      ; if r6 = 0, then d
                                                            o Button
  107 00000088 E7FA            B                CountDown2  ; if not count the 
                                                            value down again 
  108 0000008A         
  109 0000008A         Button
  110 0000008A 4925            LDR              R1, =GPIO_PORTF_DATA_R ; Load v
                                                            alue from port F to
                                                             R1
  111 0000008C 6808            LDR              R0, [R1]
  112 0000008E 2800            CMP              R0, #PF     ; Compare with LOW
  113 00000090 D000            BEQ              Toggle      ; If LOW toggle the
                                                             LED
  114 00000092         
  115 00000092 E7FA            B                Button      ; If not LOW, retur
                                                            n to begin from But
                                                            ton
  116 00000094         
  117 00000094         Toggle
  118 00000094         ; Toggle the White-LED
  119 00000094 4923            LDR              R1, =GPIO_PORTA_DATA_R
  120 00000096 6808            LDR              R0, [R1]    ; load value from p
                                                            ort A to R0
  121 00000098 F080 00C8       EOR              R0, #PA0    ; add value from Bi
                                                            t-Muster to White-L
                                                            ED             
  122 0000009C 6008            STR              R0, [R1]
  123 0000009E F000 F82B       BL               delay



ARM Macro Assembler    Page 5 


  124 000000A2         ; Toggle the Red-LED 
  125 000000A2 4920            LDR              R1, =GPIO_PORTA_DATA_R
  126 000000A4 6808            LDR              R0, [R1]
  127 000000A6 F04F 0078       MOV              R0, #0x78   ; add value from Bi
                                                            t-Muster to Red-LED
                                                            
  128 000000AA 6008            STR              R0, [R1]
  129 000000AC F000 F824       BL               delay
  130 000000B0         ; Toggle the Yellow-LED
  131 000000B0 491C            LDR              R1, =GPIO_PORTA_DATA_R
  132 000000B2 6808            LDR              R0, [R1]
  133 000000B4 F04F 00C0       MOV              R0, #PA2    ; add value from Bi
                                                            t-Muster to Yellow-
                                                            LED
  134 000000B8 6008            STR              R0, [R1]
  135 000000BA F000 F81D       BL               delay
  136 000000BE         ; Toggle the Green-LED
  137 000000BE 4919            LDR              R1, =GPIO_PORTA_DATA_R
  138 000000C0 6808            LDR              R0, [R1]
  139 000000C2 F04F 0080       MOV              R0, #PA7    ; add value from Bi
                                                            t-Muster to Green-L
                                                            ED
  140 000000C6 6008            STR              R0, [R1]
  141 000000C8 F000 F816       BL               delay
  142 000000CC         ; Toggle the Cyan-LED
  143 000000CC 4915            LDR              R1, =GPIO_PORTA_DATA_R
  144 000000CE 6808            LDR              R0, [R1]
  145 000000D0 F04F 0088       MOV              R0, #PA5    ; add value from Bi
                                                            t-Muster to Cyan-LE
                                                            D
  146 000000D4 6008            STR              R0, [R1]
  147 000000D6 F000 F80F       BL               delay
  148 000000DA         ; Toggle the Blue-LED
  149 000000DA 4912            LDR              R1, =GPIO_PORTA_DATA_R
  150 000000DC 6808            LDR              R0, [R1]
  151 000000DE F04F 0008       MOV              R0, #PA3    ; add value from Bi
                                                            t-Muster to Blue-LE
                                                            D
  152 000000E2 6008            STR              R0, [R1]
  153 000000E4 F000 F808       BL               delay
  154 000000E8         ; Toggle the Magenta-LED
  155 000000E8 490E            LDR              R1, =GPIO_PORTA_DATA_R
  156 000000EA 6808            LDR              R0, [R1]
  157 000000EC F04F 0048       MOV              R0, #PA4    ; add value from Bi
                                                            t-Muster to Magenta
                                                            -LED
  158 000000F0 6008            STR              R0, [R1]
  159 000000F2 F000 F801       BL               delay
  160 000000F6         
  161 000000F6 E7CD            B                Toggle      ; call Toggle again
                                                             to make infinite l
                                                            oop
  162 000000F8         
  163 000000F8 F64F 78FF 
              F2C0 080F 
                       delay   MOV32            R8, #COUNTER ; move delay value
                                                             to r8
  164 00000100         
  165 00000100         dl1



ARM Macro Assembler    Page 6 


  166 00000100 F1B8 0801       SUBS             R8, #1      ; count down to 0 =
                                                             wait
  167 00000104 D1FC            BNE              dl1
  168 00000106 4770            BX               LR          ; return to caller
  169 00000108         
  170 00000108                 ALIGN
  171 00000108                 END
              400FE108 
              40004400 
              4000451C 
              4002551C 
              40025510 
              40025400 
              400253FC 
              400043FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\blinky.d -o.\objects\blinky.o -I.\RTE\_Target_1 -IC:\
Users\yeuga\AppData\Local\Arm\Packs\Keil\LM4F_DFP\1.0.0\Device\Include -IC:\Kei
l_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSI
ON SETA 528" --predefine="LM4F120 SETA 1" --list=.\listings\blinky.lst Blinky.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file Blinky.s
   Uses
      None
Comment: .text unused
Blinky 00000000

Symbol: Blinky
   Definitions
      At line 39 in file Blinky.s
   Uses
      At line 35 in file Blinky.s
Comment: Blinky used once
Button 0000008A

Symbol: Button
   Definitions
      At line 109 in file Blinky.s
   Uses
      At line 106 in file Blinky.s
      At line 115 in file Blinky.s

CountDown1 0000006C

Symbol: CountDown1
   Definitions
      At line 93 in file Blinky.s
   Uses
      At line 91 in file Blinky.s
      At line 97 in file Blinky.s

CountDown2 00000080

Symbol: CountDown2
   Definitions
      At line 103 in file Blinky.s
   Uses
      At line 101 in file Blinky.s
      At line 107 in file Blinky.s

CountUp1 00000062

Symbol: CountUp1
   Definitions
      At line 88 in file Blinky.s
   Uses
      At line 92 in file Blinky.s
Comment: CountUp1 used once
CountUp2 00000076

Symbol: CountUp2
   Definitions
      At line 98 in file Blinky.s
   Uses
      At line 96 in file Blinky.s
      At line 102 in file Blinky.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Matrikelnummer 00000052

Symbol: Matrikelnummer
   Definitions
      At line 83 in file Blinky.s
   Uses
      None
Comment: Matrikelnummer unused
Toggle 00000094

Symbol: Toggle
   Definitions
      At line 117 in file Blinky.s
   Uses
      At line 113 in file Blinky.s
      At line 161 in file Blinky.s

delay 000000F8

Symbol: delay
   Definitions
      At line 163 in file Blinky.s
   Uses
      At line 123 in file Blinky.s
      At line 129 in file Blinky.s
      At line 135 in file Blinky.s
      At line 141 in file Blinky.s
      At line 147 in file Blinky.s
      At line 153 in file Blinky.s
      At line 159 in file Blinky.s

dl1 00000100

Symbol: dl1
   Definitions
      At line 165 in file Blinky.s
   Uses
      At line 167 in file Blinky.s
Comment: dl1 used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

COUNTER 000FFFFF

Symbol: COUNTER
   Definitions
      At line 16 in file Blinky.s
   Uses
      At line 80 in file Blinky.s
      At line 163 in file Blinky.s

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 2 in file Blinky.s
   Uses
      At line 119 in file Blinky.s
      At line 125 in file Blinky.s
      At line 131 in file Blinky.s
      At line 137 in file Blinky.s
      At line 143 in file Blinky.s
      At line 149 in file Blinky.s
      At line 155 in file Blinky.s

GPIO_PORTA_DEN_R 4000451C

Symbol: GPIO_PORTA_DEN_R
   Definitions
      At line 3 in file Blinky.s
   Uses
      At line 54 in file Blinky.s
Comment: GPIO_PORTA_DEN_R used once
GPIO_PORTA_DIR_R 40004400

Symbol: GPIO_PORTA_DIR_R
   Definitions
      At line 4 in file Blinky.s
   Uses
      At line 48 in file Blinky.s
Comment: GPIO_PORTA_DIR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 6 in file Blinky.s
   Uses
      At line 110 in file Blinky.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 8 in file Blinky.s
   Uses
      At line 65 in file Blinky.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 7 in file Blinky.s
   Uses
      At line 75 in file Blinky.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 9 in file Blinky.s
   Uses
      At line 70 in file Blinky.s
Comment: GPIO_PORTF_PUR_R used once
P 00000010

Symbol: P
   Definitions
      At line 26 in file Blinky.s
   Uses
      At line 67 in file Blinky.s
      At line 72 in file Blinky.s

PA0 000000C8

Symbol: PA0
   Definitions
      At line 20 in file Blinky.s
   Uses
      At line 121 in file Blinky.s
Comment: PA0 used once
PA2 000000C0

Symbol: PA2
   Definitions
      At line 21 in file Blinky.s
   Uses
      At line 133 in file Blinky.s
Comment: PA2 used once
PA3 00000008

Symbol: PA3
   Definitions
      At line 19 in file Blinky.s
   Uses
      At line 151 in file Blinky.s
Comment: PA3 used once
PA4 00000048

Symbol: PA4
   Definitions
      At line 22 in file Blinky.s
   Uses
      At line 157 in file Blinky.s
Comment: PA4 used once
PA5 00000088

Symbol: PA5
   Definitions
      At line 23 in file Blinky.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 145 in file Blinky.s
Comment: PA5 used once
PA6 00000040

Symbol: PA6
   Definitions
      At line 18 in file Blinky.s
   Uses
      None
Comment: PA6 unused
PA7 00000080

Symbol: PA7
   Definitions
      At line 17 in file Blinky.s
   Uses
      At line 50 in file Blinky.s
      At line 56 in file Blinky.s
      At line 139 in file Blinky.s

PF 00000000

Symbol: PF
   Definitions
      At line 25 in file Blinky.s
   Uses
      At line 112 in file Blinky.s
Comment: PF used once
SYSCTL_RCGC2_GPIOA 00000001

Symbol: SYSCTL_RCGC2_GPIOA
   Definitions
      At line 12 in file Blinky.s
   Uses
      At line 44 in file Blinky.s
Comment: SYSCTL_RCGC2_GPIOA used once
SYSCTL_RCGC2_GPIOF 00000020

Symbol: SYSCTL_RCGC2_GPIOF
   Definitions
      At line 13 in file Blinky.s
   Uses
      At line 62 in file Blinky.s
Comment: SYSCTL_RCGC2_GPIOF used once
SYSCTL_RCGC2_R 400FE108

Symbol: SYSCTL_RCGC2_R
   Definitions
      At line 11 in file Blinky.s
   Uses
      At line 42 in file Blinky.s
      At line 60 in file Blinky.s

matrikel_1 0000000A

Symbol: matrikel_1
   Definitions
      At line 28 in file Blinky.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 84 in file Blinky.s
Comment: matrikel_1 used once
matrikel_2 0000000F

Symbol: matrikel_2
   Definitions
      At line 29 in file Blinky.s
   Uses
      At line 85 in file Blinky.s
Comment: matrikel_2 used once
null 00000000

Symbol: null
   Definitions
      At line 30 in file Blinky.s
   Uses
      At line 86 in file Blinky.s
      At line 87 in file Blinky.s
      At line 95 in file Blinky.s
      At line 105 in file Blinky.s

23 symbols
370 symbols in table
